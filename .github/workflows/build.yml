name: build_wintools
on:
  push: {tags:  ['v*'] } # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request: 

permissions:
  contents: write
  
jobs:
  build_wintools:
    runs-on: windows-2025
    strategy:
      matrix: 
        project: 
          - {targetname: winloader, targetext: exe}
          - {targetname: libwinversion, targetext: dll}
          - {targetname: libwinoverride, targetext: dll}
    steps:
    - name: pull and init
      uses: actions/checkout@v3
      with: {submodules: true}
    
    - name: add msbuild to path
      uses: microsoft/setup-msbuild@v1.1
    
    - name: prepare enviroment
      run: |
        Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
        $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
        $WorkLoads = '--add Microsoft.VisualStudio.Component.WinXP'
        $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"", $WorkLoads, '--quiet', '--norestart', '--nocache')
        $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
        if ($process.ExitCode -eq 0)
        {
            Write-Host "components have been successfully added"
        }
        else
        {
            Write-Host "components were not installed"
            exit 1
        }

    - name: build target
      run: |
        msbuild ${{ matrix.project.targetname }}.vcxproj -p:configuration=release -p:Platform=x86
        msbuild ${{ matrix.project.targetname }}.vcxproj -p:configuration=release -p:Platform=x64
    
    - name: upload release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'push'
      with:
        artifacts: "build/${{ matrix.project.targetname }}32.${{ matrix.project.targetext }},build/${{ matrix.project.targetname }}64.${{ matrix.project.targetext }}"
        allowUpdates: "true"
        replacesArtifacts: "true"
        token: ${{ secrets.GITHUB_TOKEN }}

  build_src:
    runs-on: ubuntu-24.04
    steps:
    - name: pull and init
      uses: actions/checkout@v3
      with: {submodules: true}
    - name: install depends
      run: |
        pip3 install lief keystone-engine

    - name: build pysrc
      run: |
        chmod +x script/*.sh 
        bash script/build_src.sh
        archive_name=WinOverrideSrc_${{ github.ref_name }}
        7z a ${archive_name}.7z build/src
        7z rn ${archive_name}.7z build/src ${archive_name}

    - name: create a release
      uses: ncipollo/release-action@v1
      if: github.event_name == 'push'
      with:
        artifacts: "*.7z"
        allowUpdates: "true"
        token: ${{ secrets.GITHUB_TOKEN }}